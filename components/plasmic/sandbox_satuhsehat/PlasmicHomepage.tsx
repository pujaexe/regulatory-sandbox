// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: mazsTSCdeXMvNewzsED8CP
// Component: 2kkee5R7hDuz
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { NavigationBar } from "@plasmicpkgs/plasmic-nav"; // plasmic-import: jGx9tiKJoex/codeComponent
import Collapsible from "../../Collapsible"; // plasmic-import: Z0pRxdl5sa/component

import { useScreenVariants as useScreenVariantsqbGzfD819Z3T3 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: QBGzfD819Z3t3/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_sandbox_satuhsehat.module.css"; // plasmic-import: mazsTSCdeXMvNewzsED8CP/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: 2kkee5R7hDuz/css

import MedicineDrugHealthMedicalSmartphonePharmacyTabletSvgrepoCom1SvgIcon from "./icons/PlasmicIcon__MedicineDrugHealthMedicalSmartphonePharmacyTabletSvgrepoCom1Svg"; // plasmic-import: a7fWEtdh_m/icon
import HeartbeatHeartHealthPulseSmartphoneMedicalRateSvgrepoCom1SvgIcon from "./icons/PlasmicIcon__HeartbeatHeartHealthPulseSmartphoneMedicalRateSvgrepoCom1Svg"; // plasmic-import: KmthYfnQUS/icon
import MedicineDrugHealthMedicalSmartphonePharmacyTablet2SvgrepoComsvgIcon from "./icons/PlasmicIcon__MedicineDrugHealthMedicalSmartphonePharmacyTablet2SvgrepoComsvg"; // plasmic-import: VzvMwKKQ1a/icon
import MobilePhoneChatHealthDeviceTelephoneSmartphoneSvgrepoComsvgIcon from "./icons/PlasmicIcon__MobilePhoneChatHealthDeviceTelephoneSmartphoneSvgrepoComsvg"; // plasmic-import: KLL8rlOJRh/icon

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  header?: p.Flex<"div">;
  navigationBar?: p.Flex<typeof NavigationBar>;
  hero?: p.Flex<"section">;
  about?: p.Flex<"div">;
  who?: p.Flex<"div">;
  card5?: p.Flex<"div">;
  card6?: p.Flex<"div">;
  card7?: p.Flex<"div">;
  card8?: p.Flex<"div">;
  faq?: p.Flex<"div">;
  footer?: p.Flex<"div">;
};

export interface DefaultHomepageProps {}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsqbGzfD819Z3T3()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames(projectcss.all, sty.header)}
          >
            <NavigationBar
              data-plasmic-name={"navigationBar"}
              data-plasmic-override={overrides.navigationBar}
              brand={
                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link___0UK4U
                  )}
                  component={Link}
                  href={"#" as const}
                  platform={"nextjs"}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__ny0Wy)}
                    displayHeight={"40px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    src={{
                      src: "/plasmic/sandbox_satuhsehat/images/logokemkespng.png",
                      fullWidth: 133,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />
                </p.PlasmicLink>
              }
              className={classNames("__wab_instance", sty.navigationBar)}
              closeButton={
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__nQCpK)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={"https://static1.plasmic.app/close.svg" as const}
                />
              }
              itemsGap={24 as const}
              menuItems={
                <React.Fragment>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__epZxe
                    )}
                    component={Link}
                    href={"/" as const}
                    platform={"nextjs"}
                  >
                    {"Home"}
                  </p.PlasmicLink>

                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__mkVy2
                    )}
                    component={Link}
                    href={"#about" as const}
                    platform={"nextjs"}
                  >
                    {"About"}
                  </p.PlasmicLink>

                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__vlKCv
                    )}
                    component={Link}
                    href={"#faq" as const}
                    platform={"nextjs"}
                  >
                    {"FAQ"}
                  </p.PlasmicLink>
                </React.Fragment>
              }
              openButton={
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__yp4VX)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={"https://static1.plasmic.app/menu.svg" as const}
                />
              }
              responsiveBreakpoint={768 as const}
            />
          </div>

          <p.Stack
            as={"section"}
            data-plasmic-name={"hero"}
            data-plasmic-override={overrides.hero}
            hasGap={true}
            className={classNames(projectcss.all, sty.hero)}
          >
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img___4N5Sd)}
              displayHeight={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? ("500px" as const)
                  : ("auto" as const)
              }
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"auto" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/sandbox_satuhsehat/images/_22022023BannerRegsan5760X2252Px3Fa2Minjpg.jpeg",
                fullWidth: 5760,
                fullHeight: 2252,
                aspectRatio: undefined
              }}
            />

            <div className={classNames(projectcss.all, sty.columns__paJd)}>
              {(
                hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
              ) ? (
                <div
                  className={classNames(projectcss.all, sty.column___3HaNp)}
                />
              ) : null}

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__h3TZk)}
              >
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__jklqH
                  )}
                >
                  {"Regulatory Sandbox Kemenkes RI"}
                </h2>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ln55V
                  )}
                >
                  {
                    "Ruang Uji Bagi Penyelenggara Inovasi Digital Kesehatan di Indonesia"
                  }
                </div>

                <h5
                  className={classNames(
                    projectcss.all,
                    projectcss.h5,
                    projectcss.__wab_text,
                    sty.h5__efIw5
                  )}
                >
                  {"Coming Soon"}
                </h5>
              </p.Stack>
            </div>
          </p.Stack>

          <div
            data-plasmic-name={"about"}
            data-plasmic-override={overrides.about}
            className={classNames(projectcss.all, sty.about)}
            id={"about" as const}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__xctZw)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__lvHhf)}
              >
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2___3JdzJ
                  )}
                >
                  {"Apa itu Regulatory Sandbox ?"}
                </h2>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__hT3NR
                  )}
                >
                  {
                    "Regulatory Sandbox adalah mekanisme pengujian untuk penyelenggara inovasi digital kesehatan (IDK) yang dilakukan oleh Kementerian Kesehatan RI  untuk menilai keandalan proses bisnis, model bisnis, teknologi, tata kelola Pembelajaran selama proses uji dapat menjadi rekomendasi pengembangan regulasi berbasis bukti. \n\nIDK dikelompokan kedalam klaster-klaster seperti telekesehatan, telefarmasi, on-demand healthcare (lokapasar kesehatan), artifcial inteligence, dan berbagai IDK lainnya yang berkembang sesuai dengan perkembangan teknologi. Pembelajaran selama proses uji dapat menjadi rekomendasi pengembangan regulasi untuk IDK pada kategori spesifik."
                  }
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__yEbrg)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__g3Ah8)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/sandbox_satuhsehat/images/sandboxpng.png",
                    fullWidth: 899,
                    fullHeight: 899,
                    aspectRatio: undefined
                  }}
                />
              </p.Stack>
            </p.Stack>
          </div>

          <div
            data-plasmic-name={"who"}
            data-plasmic-override={overrides.who}
            className={classNames(projectcss.all, sty.who)}
          >
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__iRftO)}
              >
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2___7F7JD
                  )}
                >
                  {"Untuk Siapa ?"}
                </h2>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__aqkHv
                  )}
                >
                  {
                    "Regulatory Sandbox akan dimulai bagi pelaku usaha non perseorangan Inovasi Digital Kesehatan (IDK) pada klaster Telekesehatan "
                  }
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__mF6Gg)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__kfMsy)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"card5"}
                      data-plasmic-override={overrides.card5}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.card5)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__sPn
                          )}
                        >
                          <MedicineDrugHealthMedicalSmartphonePharmacyTabletSvgrepoCom1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__jO5Ze
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}

                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5___7Hjci
                        )}
                      >
                        {"Telekonsultasi"}
                      </h5>
                    </p.Stack>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__r6Rz5)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"card6"}
                      data-plasmic-override={overrides.card6}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.card6)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__gSluH
                          )}
                        >
                          <HeartbeatHeartHealthPulseSmartphoneMedicalRateSvgrepoCom1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__qZu3G
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}

                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5__aMpuF
                        )}
                      >
                        {"Telemonitoring"}
                      </h5>
                    </p.Stack>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__gwehn)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"card7"}
                      data-plasmic-override={overrides.card7}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.card7)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__q8AXb
                          )}
                        >
                          <MedicineDrugHealthMedicalSmartphonePharmacyTablet2SvgrepoComsvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__ey6Br
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}

                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5___1TMro
                        )}
                      >
                        {"Telemedicine"}
                      </h5>
                    </p.Stack>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__fLlBg)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"card8"}
                      data-plasmic-override={overrides.card8}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.card8)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__msco
                          )}
                        >
                          <MobilePhoneChatHealthDeviceTelephoneSmartphoneSvgrepoComsvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__zkEL
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}

                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5__chDaq
                        )}
                      >
                        {"Komunikasi, Informasi, Edukasi Kesehatan"}
                      </h5>
                    </p.Stack>
                  </div>
                </div>

                <h5
                  className={classNames(
                    projectcss.all,
                    projectcss.h5,
                    projectcss.__wab_text,
                    sty.h5__e2M0T
                  )}
                >
                  {"dan praktik telekesehatan lainnya"}
                </h5>
              </p.Stack>
            ) : null}
          </div>

          <div
            data-plasmic-name={"faq"}
            data-plasmic-override={overrides.faq}
            className={classNames(projectcss.all, sty.faq)}
            id={"faq" as const}
          >
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__rdoCr)}
              >
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__hrT60
                  )}
                >
                  {"FAQ"}
                </h2>

                <div className={classNames(projectcss.all, sty.columns__hShR)}>
                  <div
                    className={classNames(projectcss.all, sty.column__d8HRl)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___4ADdi
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__egpu9
                        )}
                      >
                        <Collapsible
                          className={classNames(
                            "__wab_instance",
                            sty.collapsible__w9KY
                          )}
                          slot={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__aCapP
                              )}
                            >
                              {"Apa itu regulatory sandbox?"}
                            </div>
                          }
                        >
                          {
                            "Regulatory sandbox adalah mekanisme pengujian untuk penyelenggara inovasi digital kesehatan (IDK) yang dilakukan oleh Kementerian Kesehatan untuk menilai keandalan proses bisnis, model bisnis, teknologi, tata kelola. \n\nPembelajaran selama proses uji dapat menjadi rekomendasi pengembangan regulasi berbasis bukti."
                          }
                        </Collapsible>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__dMn8B
                        )}
                      >
                        <Collapsible
                          className={classNames(
                            "__wab_instance",
                            sty.collapsible__xezpa
                          )}
                          slot={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__eBkoX
                              )}
                            >
                              {
                                "Siapa yang dapat mendaftar regulatory sandbox? "
                              }
                            </div>
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vdh2W
                            )}
                          >
                            {
                              "Peserta Regulatory Sandbox merupakan penyelenggara IDK yang memenuhi ketentuan sebagaimana dimaksud dalam panduan ini yaitu sebagai berikut:"
                            }
                          </div>

                          <ul
                            className={classNames(
                              projectcss.all,
                              projectcss.ul,
                              sty.ul__k10Mq
                            )}
                          >
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__voZvY
                              )}
                            >
                              {
                                "Pelaku usaha non perseroangan sebagaimana diatur dalam peraturan perundang-undangan terkait perizinan usaha terintegrasi"
                              }
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li___6QaCt
                              )}
                            >
                              {
                                "Melaksanakan kegiatan usaha secara luas atau sudah dilaksanakan (pengguna dan kegiatan usaha) pada minimal dua provinsi"
                              }
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li___9KGho
                              )}
                            >
                              {
                                "Inovasi yang dapat menimbulkan kompleksitas dari sisi teknologi dan penggunaannya"
                              }
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__gDisU
                              )}
                            >
                              {
                                "Merupakan bagian dari klaster yang tengah menjadi fokus regulatory sandbox (untuk tahap awal ini klaster telekesehatan yang terdiri dari Telekonsultasi, Telemonitoring, Telemedicine, Komunikasi, Edukasi, Informasi (KIE), dan teknologi telekesehatan lainnya)"
                              }
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__ulmb7
                              )}
                            >
                              {
                                "Merupakan bagian dari klaster yang tengah menjadi fokus regulatory sandbox (untuk tahap awal ini klaster telekesehatan yang terdiri dari Telekonsultasi, Telemonitoring, Telemedicine, Komunikasi, Edukasi, Informasi (KIE), dan teknologi telekesehatan lainnya)"
                              }
                            </li>
                          </ul>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__yApCq
                            )}
                          >
                            {
                              "Pelaku usaha non perseroangan sebagaimana diatur dalam peraturan perundang-undangan terkait perizinan usaha terintegrasi, antara lain"
                            }
                          </div>

                          <ul
                            className={classNames(
                              projectcss.all,
                              projectcss.ul,
                              sty.ul__hYvN
                            )}
                          >
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li___9Z2X8
                              )}
                            >
                              {"Perseroan terbatas"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__p1JPj
                              )}
                            >
                              {"Perusahaan umum"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__ymrdh
                              )}
                            >
                              {"Perusahaan umum daerah"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__sr7H2
                              )}
                            >
                              {"Badan hukum lainnya yang dimiliki oleh negara"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__feSa9
                              )}
                            >
                              {"Badan layanan umum"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__fnx5K
                              )}
                            >
                              {"Lembaga penyiaran"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__ckmbT
                              )}
                            >
                              {"Badan usaha yang didirikan oleh yayasan"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__z8QmI
                              )}
                            >
                              {"Koperasi"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__ofpKl
                              )}
                            >
                              {"Persekutuan komanditer"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__tWyCg
                              )}
                            >
                              {"Persekutuan firma; dan"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__iBkEk
                              )}
                            >
                              {"Persekutuan perdata"}
                            </li>
                          </ul>
                        </Collapsible>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__mu3Y
                        )}
                      >
                        <Collapsible
                          className={classNames(
                            "__wab_instance",
                            sty.collapsible__avl0B
                          )}
                          slot={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__xvg9Z
                              )}
                            >
                              {
                                "Apakah ada kewajiban setiap penyelenggara IDK mengikuti regulatory sandbox?"
                              }
                            </div>
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qTfii
                            )}
                          >
                            {
                              "Penyelenggara IDK dihimbau untuk mendaftar regulatory sandbox dalam rangka turut serta dalam memberi masukan bagi pembuat kebijakan (regulator) serta dalam rangka melakukan perlindungan pengguna inovasi."
                            }
                          </div>
                        </Collapsible>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__l2Bw8
                        )}
                      >
                        <Collapsible
                          className={classNames(
                            "__wab_instance",
                            sty.collapsible__xzoog
                          )}
                          slot={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___5YZmC
                              )}
                            >
                              {
                                "Apakah regulatory sandbox hanya untuk inovasi digital kesehatan dalam negeri?"
                              }
                            </div>
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__oEczg
                            )}
                          >
                            {
                              "Ya. Regulatory sandbox oleh Kementerian Kesehatan RI diperuntukkan bagi pelaku industri penyelenggara IDK dalam negeri yang memiliki inovasi kesehatan disruptif. Saat ini regulatory sandbox diberlakukan untuk klaster telekesehatan dan ke depannya akan diperluas ke klaster prioritas lainnya."
                            }
                          </div>
                        </Collapsible>
                      </div>
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__ufAmx)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__iZcV1)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__v5In
                        )}
                      >
                        <Collapsible
                          className={classNames(
                            "__wab_instance",
                            sty.collapsible__qReT
                          )}
                          slot={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__exDwe
                              )}
                            >
                              {"Kapan saya perlu mengikuti Regulatory Sandbox?"}
                            </div>
                          }
                        >
                          {
                            "Setiap penyelenggara IDK pada klaster prioritas yang telah diumumkan oleh Kementerian Kesehatan RI, diberikan waktu satu bulan untuk melakukan pendaftaran dan mengikuti proses pendaftaran untuk mendapatkan rekomendasi."
                          }
                        </Collapsible>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__pkWop
                        )}
                      >
                        <Collapsible
                          className={classNames(
                            "__wab_instance",
                            sty.collapsible___50K1M
                          )}
                          slot={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___6Oory
                              )}
                            >
                              {
                                "Ruang lingkup apa saja yang diuji dalam regulatory sandbox?"
                              }
                            </div>
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__cPqPw
                            )}
                          >
                            {
                              'Regulatory sandbox menguji penyelenggara IDK pada aspek berikut:\n- Penerimaan pengguna (user acceptance test)\n- Standar teknologi\n- Keamanan dan perlindungan data pengguna\n- Inklusivitas\n\nTerdapat juga aspek-aspek lain yang diuji pada masing-masing klaster yang akan ditentukan oleh Kementerian Kesehatan dan tim panel."'
                            }
                          </div>
                        </Collapsible>
                      </div>

                      <div
                        className={classNames(projectcss.all, sty.freeBox__h6P)}
                      >
                        <Collapsible
                          className={classNames(
                            "__wab_instance",
                            sty.collapsible__aJCwZ
                          )}
                          slot={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__oeR6V
                              )}
                            >
                              {
                                "Bagaimana proses pendaftaran regulatory sandbox"
                              }
                            </div>
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__cu0Zh
                            )}
                          >
                            {
                              '"Proses pendaftaran regulatory sandbox meliputi:\n\n1. Pengisian formulir pendaftaran\nTahap ini terdiri atas pengisian formulir pendaftaran secara online. \n\n2. Verifikasi dan validasi pendaftaran\nPenyelenggara IDK yang lolos verifikasi dan validasi akan diberikan status tercatat. Selanjutnya peserta akan mendapatkan nomor registrasi atas status tercatat.\n\n3. Seleksi dan kategorisasi klaster inovasi\nPada tahap ini, penyelenggara IDK akan melanjutkan proses seleksi untuk dapat ikut serta dalam regulatory sandbox. Pengumuman akan diinformasikan melalui kanal publikasi resmi Kementerian Kesehatan Republik Indonesia kepada penyelenggara IDK."'
                            }
                          </div>
                        </Collapsible>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__hyAz
                        )}
                      >
                        <Collapsible
                          className={classNames(
                            "__wab_instance",
                            sty.collapsible__bEvrH
                          )}
                          slot={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__sviyU
                              )}
                            >
                              {
                                "Berapa lama waktu yang diperlukan untuk mendaftar sampai mendapatkan rekomendasi regulatory sandbox?"
                              }
                            </div>
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__u7U8C
                            )}
                          >
                            {
                              'Total estimasi waktu yang dibutuhkan untuk menyelesaikan proses pendaftaran hingga pemberian rekomendasi pada regulatory sandbox adalah 8-14 bulan. Perbedaan waktu keluarnya rekomendasi tergantung dengan ada atau tidaknya perbaikan, berikut simulasi waktu perihal tahapan yang disebutkan:\n\n- Pendaftaran sampai Seleksi dan Kategorisasi Klaster : 2 Bulan\n- Pengujian sampai Rekomendasi (tanpa perbaikan) : 6 bulan\n- Pengujian sampai Rekomendasi (dengan waktu perbaikan maksimal) : 14 bulan"""'
                            }
                          </div>
                        </Collapsible>
                      </div>
                    </div>
                  </div>
                </div>
              </p.Stack>
            ) : null}
          </div>

          <p.Stack
            as={"div"}
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            hasGap={true}
            className={classNames(projectcss.all, sty.footer)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__xwWwp)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ig2Ze
                )}
              >
                {"© Kementerian Kesehatan RI "}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___68O7R
                )}
              >
                {
                  "Jl. HR. Rasuna Said Blok X5 Kav. 4-9\nJakarta Selatan, Jakarta, Indonesia 12950\n"
                }
              </div>
            </p.Stack>
          </p.Stack>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "navigationBar",
    "hero",
    "about",
    "who",
    "card5",
    "card6",
    "card7",
    "card8",
    "faq",
    "footer"
  ],
  header: ["header", "navigationBar"],
  navigationBar: ["navigationBar"],
  hero: ["hero"],
  about: ["about"],
  who: ["who", "card5", "card6", "card7", "card8"],
  card5: ["card5"],
  card6: ["card6"],
  card7: ["card7"],
  card8: ["card8"],
  faq: ["faq"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: "div";
  navigationBar: typeof NavigationBar;
  hero: "section";
  about: "div";
  who: "div";
  card5: "div";
  card6: "div";
  card7: "div";
  card8: "div";
  faq: "div";
  footer: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    navigationBar: makeNodeComponent("navigationBar"),
    hero: makeNodeComponent("hero"),
    about: makeNodeComponent("about"),
    who: makeNodeComponent("who"),
    card5: makeNodeComponent("card5"),
    card6: makeNodeComponent("card6"),
    card7: makeNodeComponent("card7"),
    card8: makeNodeComponent("card8"),
    faq: makeNodeComponent("faq"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
